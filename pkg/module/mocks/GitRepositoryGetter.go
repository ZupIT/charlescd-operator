// Code generated by mockery v2.10.0. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"

	types "k8s.io/apimachinery/pkg/types"

	v1beta1 "github.com/fluxcd/source-controller/api/v1beta1"
)

// GitRepositoryGetter is an autogenerated mock type for the GitRepositoryGetter type
type GitRepositoryGetter struct {
	mock.Mock
}

// GetGitRepository provides a mock function with given fields: ctx, key
func (_m *GitRepositoryGetter) GetGitRepository(ctx context.Context, key types.NamespacedName) (*v1beta1.GitRepository, error) {
	ret := _m.Called(ctx, key)

	var r0 *v1beta1.GitRepository
	if rf, ok := ret.Get(0).(func(context.Context, types.NamespacedName) *v1beta1.GitRepository); ok {
		r0 = rf(ctx, key)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*v1beta1.GitRepository)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, types.NamespacedName) error); ok {
		r1 = rf(ctx, key)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
