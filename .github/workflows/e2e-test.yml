name: Integration tests

on:
  repository_dispatch:
    types: [ charlescd-testing ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0

      - name: Set up Docker image tag
        id: vars
        run: echo "::set-output name=IMAGE_TAG::${{ secrets.ECR_PRIVATE_REPOSITORY }}:alpha-$(git rev-parse --short HEAD)"

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: ECRPush
          role-skip-session-tagging: true

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1.2.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1.6.0

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1.3.3

      - name: Build and push
        uses: docker/build-push-action@v2.10.0
        with:
          push: true
          tags: ${{ steps.vars.outputs.IMAGE_TAG }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

  test:
    runs-on: ubuntu-latest
    needs: [ build ]
    strategy:
      matrix:
        kubernetes:
          - "1.23.4"
          - "1.22.7"
          - "1.21.10"
          - "1.20.15"
          - "1.19.16"
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3.0.0

      - name: Set up Docker image tag
        id: vars
        run: |
          echo "::set-output name=IMAGE_TAG::${{ secrets.ECR_PRIVATE_REPOSITORY }}:alpha-$(git rev-parse --short HEAD)"
          echo "::set-output name=COMMIT_HASH::$(git rev-parse --short HEAD)"

      - name: Set up AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1.6.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: ECRPush
          role-skip-session-tagging: true

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1.3.3

      - name: Pull Docker image
        run: docker pull ${{ steps.vars.outputs.IMAGE_TAG }}

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17.8

      - name: KUTTL config
        run: |
          cat << EOF > ./kind.yaml
          kind: Cluster
          apiVersion: kind.x-k8s.io/v1alpha4
          nodes:
            - role: control-plane
              image: kindest/node:v${{ matrix.kubernetes }}
          EOF
          cat << EOF > ./kuttl-test.yaml
            apiVersion: kuttl.dev/v1beta1
            kind: TestSuite
            kindConfig: ./kind.yaml
            kindContext: charlescd
            startKIND: true
            reportFormat: JSON
            testDirs:
              - ./test/integration/
            commands:
              - script: make install deploy IMG=${{ steps.vars.outputs.IMAGE_TAG }}
            kindContainers:
              - ${{ steps.vars.outputs.IMAGE_TAG }}
          EOF

      - name: Runs integration tests
        run: make e2e-test

      - name: Upload integration test results
        if: always()
        uses: actions/upload-artifact@v3.0.0
        with:
          name: kuttl-test-${{ steps.vars.outputs.COMMIT_HASH }}-${{ matrix.kubernetes }}
          path: |
            kind-logs-*
            kuttl-test.json
          retention-days: 7
